name: CI

on:
  push:
    branches:
      - 'feature-*'  # Triggers on feature branches
  pull_request:
    branches:
      - dev  # Triggers on pull requests to dev branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Specify the Node.js version you are using

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --coverage

      - name: Build project
        run: npm run build

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/dev' && github.event_name == 'push' && success() # Only merge if build passed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git user
        run: |
          git config --global user.name 'zishan07cse'
          git config --global user.email 'zishan07csecuet@gmail.com'

      - name: Fetch all branches
        run: git fetch --all

      - name: Checkout dev branch
        run: git checkout dev

      - name: Merge feature branch into dev
        run: |
          branch_name=$(echo "${{ github.ref }}" | sed 's/refs\/heads\///')
          git merge origin/$branch_name --no-ff -m "Merge feature branch '$branch_name' into dev"
          git push origin dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-cms-master:
    name: Merge master into release after a PR is merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Automerge master into release
        uses: mtanzi/action-automerge@v1
        id: merge
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          source: 'master'
          target: 'release'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }} # Optional: Add if you have a Slack webhook
